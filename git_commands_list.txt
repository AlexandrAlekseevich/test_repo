git config -global user.name {{name}}
				   user.email {{email}}
git config --list

# ветвление слияние
git branch {{branch name}} 		создать ветку
git checkout {{branch name}} 	переключится на ветку
git merge {{branch name}} 		влить в текущую ветку указанную ветку

# работа с коммитами
git commit
		-m {{"commit message"}}
		-a 						аналогично вызову git add -A
git log 						журнал коммитов
git diff 						показать различия в файлах

# ??
git reset --soft
git restore --staged

# ?? работа с удалённым репозиторием
fetch забрать с github все изменения ссылок 
		# после fetch выполни merge original себе в ветку
pull
clone
push берёт состояние локального репозитория и отправляет его на github

# продвинутые команды
blame находит автора конкретной строки
cherry-pic забрать коммитов
stash сохранить изменения в тайник
rebase последовательный cherry-pic коммитов из одной ветки на другую начиная с первого общего предка

# правила составления коммитов
1) добавлять ID задачи;
2) писать короткие заголовки ― до 50 символов;
3) делать отступ между заголовком и описанием;
4) писать заголовок с заглавной буквы;
5) не ставить точку в конце заголовка описания;
6) использовать в заголовке глагол в форме инфинитива;
7) ограничивать длину строки в теле описания 72 символами;
8) в теле описания отвечать на вопросы: «Что сделали?» и «Почему сделали?»

рабочая директория
индекс
репозиторий


git cat-file -t {{HASH}} 		читать содержимое объектов git по их хешу
